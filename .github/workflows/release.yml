name: Python Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release build

      - name: Generate changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python -m semantic_release changelog

      - name: Create branch and commit changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          export BRANCH_NAME="release/changelog-update-$(date +%s)"
          git checkout -b "$BRANCH_NAME"

          git add CHANGELOG.md
          git diff --cached --quiet && echo "No changes to commit" && exit 0

          git commit -m "docs(changelog): update CHANGELOG.md"
          git push origin "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Open Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JSON_FILE="pr-body.json"
          echo '{
            "title": "ðŸ”„ Update CHANGELOG.md",
            "head": "'"${BRANCH_NAME}"'",
            "base": "main",
            "body": "This PR was automatically generated by the release workflow to update CHANGELOG.md."
          }' > $JSON_FILE
      
          pr_url=$(curl -s -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d @"$JSON_FILE")
      
          echo "ðŸ“¦ Pull request created:"
          echo "$pr_url" | jq -r '.html_url'

      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python -m semantic_release publish